services:
  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      # !SETUP-COMPOSE: following the Database fields value on your .env file
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: video_rental_shop_db
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis-cache
    ports:
      - "6378:6379"
    restart: unless-stopped

  app:
    container_name: vrs-app
    environment:
      APP_NAME: "Video Rental Shop"
      APP_VERSION: "1.0.0"
      APP_DESCRIPTION: "A video rental shop API using Go with Gin"
      SERVER_ADDRESS: 8080
      GRACEFUL_TIMEOUT: 0
      API_VERSION: 1
      # Database
      DATABASE_HOST: "postgres"
      DATABASE_PORT: 5432
      DATABASE_USER: "postgres"
      DATABASE_PASS: "postgres"
      DATABASE_NAME: "video_rental_shop_db"
      # Redis
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: "" # no password set
      REDIS_DB: 0 # use default DB
      # JWT
      JWT_SECRET: "secret_string"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    restart: unless-stopped
